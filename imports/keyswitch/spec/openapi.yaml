










openapi: "3.0.2"
info:
  title: Keyswitch API
  version: "1.0.0"
  description: |
    Keyswitch is a compliant peer-to-peer vehicle rental platform focused on airport compliance, mid/long-term rentals, specialty inventory, and transparent risk/insurance.

servers:
  - url: http://localhost:3001/api/v1
    description: Local development server

tags:
  - name: Auth
    description: Authentication endpoints
  - name: Users
    description: User management endpoints
  - name: Vehicles
    description: Vehicle management endpoints
  - name: Listings
    description: Listing management endpoints
  - name: Bookings
    description: Booking management endpoints
  - name: Payments
    description: Payment processing endpoints
  - name: Claims
    description: Claim management endpoints

paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: User login with JWT authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /auth/refresh:
    post:
      tags:
        - Auth
      summary: Refresh JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Successful token refresh
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /users/me:
    get:
      tags:
        - Users
      summary: Get current user information
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /vehicles:
    get:
      tags:
        - Vehicles
      summary: Get all vehicles for current host
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of vehicles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'

    post:
      tags:
        - Vehicles
      summary: Create a new vehicle (host only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                make:
                  type: string
                model:
                  type: string
                year:
                  type: integer
                licensePlate:
                  type: string
                vin:
                  type: string
      responses:
        '201':
          description: Vehicle created successfully

  /vehicles/{vehicleId}:
    get:
      tags:
        - Vehicles
      summary: Get vehicle details by ID
      parameters:
        - name: vehicleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Vehicle details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'

  /listings/search:
    get:
      tags:
        - Listings
      summary: Search for available listings
      parameters:
        - name: location
          in: query
          required: false
          schema:
            type: string
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: List of available listings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Listing'

  /listings/{listingId}:
    get:
      tags:
        - Listings
      summary: Get listing details by ID
      parameters:
        - name: listingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Listing details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'

  /bookings:
    post:
      tags:
        - Bookings
      summary: Create a new booking
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listingId:
                  type: string
                startDate:
                  type: string
                  format: date-time
                endDate:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Booking created successfully

  /bookings/{bookingId}:
    get:
      tags:
        - Bookings
      summary: Get booking details by ID
      security:
        - bearerAuth: []
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Booking details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'

  /payments/intents:
    post:
      tags:
        - Payments
      summary: Create a payment intent for booking deposit
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                currency:
                  type: string
                  default: "USD"
                bookingId:
                  type: string
      responses:
        '201':
          description: Payment intent created successfully

  /claims:
    post:
      tags:
        - Claims
      summary: Create a new claim for damage or issues
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingId:
                  type: string
                description:
                  type: string
                photos:
                  type: array
                  items:
                    type: string

  /risk/trip/{tripId}/score:
    get:
      tags:
        - Risk
      summary: Get risk score for a trip
      security:
        - bearerAuth: []
      parameters:
        - name: tripId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Risk assessment results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskAssessment'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
          enum: [guest, host, admin]

    Vehicle:
      type: object
      properties:
        id:
          type: string
        make:
          type: string
        model:
          type: string
        year:
          type: integer
        licensePlate:
          type: string
        vin:
          type: string

    Listing:
      type: object
      properties:
        id:
          type: string
        vehicleId:
          type: string
        basePricePerDay:
          type: number
          format: decimal

    Booking:
      type: object
      properties:
        id:
          type: string
        listingId:
          type: string
        guestProfileId:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type type: string
          format: date-time
        totalPrice:
          type: number
          format: decimal

    RiskAssessment:
      type: object
      properties:
        riskBand:
          type: string
          enum: [LOW, MEDIUM, HIGH]
        suggestedDeposit:
          type: number
          format: decimal
        priceMultiplier:
          type: number
          format: decimal

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT








